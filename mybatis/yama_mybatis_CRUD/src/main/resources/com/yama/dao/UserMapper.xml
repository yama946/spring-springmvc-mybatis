<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yama.dao.UserMapper">
    <!-- 类名与数据库列名不匹配时的解决方法
    1、在使用查询时，直接使用和类中匹配的别名进行查询
    2、使用此表标签进行配置，类名与列名的映射关系，
    属性：    id属性：在select中使用resultmap是的值，是映射条件的唯一标识
              type:标识类所在的包，
    -->
    <resultMap id="userMap" type="com.yama.domain.User">
<!--        配置主键，property标识类中属性名，column标识表中列名-->
        <id property="userid" column="id"></id>
<!--        配置非主键-->
        <result property="username" column="username"></result>
    </resultMap>

<!--    <select id="findAll" resultMap="userMap">-->
<!--        select * from user;-->
<!--    </select>-->


    <select id="findAll" resultType="com.yama.domain.User">
        select * from user;
    </select>

    <insert id="saveUser" parameterType="com.yama.domain.User">
        <!--使用selectkey字段，结合语句获取插入后的对象id值
                keyproperty：对象属性名
                keycolumn:对应列中的列名
                resulttyype:返回类型
                order：其中语句何时执行，何时获得
        -->
        <selectKey keyProperty="id" keyColumn="id"  resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,birthday,sex,address) values(#{username},#{birthday},#{sex},#{address});
    </insert>

    <update id="updateUser" parameterType="com.yama.domain.User">
        update user set username = #{username},birthday=#{birthday},sex=#{sex},address =#{address} where id = #{id};
    </update>

    <delete id="deleteById" parameterType="int">
        delete from user where id = #{id};
    </delete>

    <select id="findById" parameterType="int" resultType="com.yama.domain.User">
        select * from user where id = #{id};
    </select>

    <select id="findByName" parameterType="String" resultType="com.yama.domain.User">
--         使用前者进行的模糊查询，会先进预编译，所以执行效率相对要高
        select * from user where username like #{username};
--         select * from user where username like '%${username}%';
    </select>

    <select id="findCount" resultType="int">
        select count(*) from user;
    </select>

    <!--ognl表达式说明，就是通过类名.属性名进行获取，如果参数类型中还有对象就继续点，
    进行模糊查询
    -->
    <select id="queryVo" parameterType="com.yama.domain.QueryVo" resultType="com.yama.domain.User">
        select * from user where username like #{user.username}
    </select>
</mapper>